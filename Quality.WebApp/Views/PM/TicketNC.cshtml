@model Quality.WebApp.TicketNCViewModel


@using (Html.BeginForm("Create", "PM", FormMethod.Post, new { @class = "form-edit" }))
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary(true);
        <h3 class="title-form">Bon de non conformité</h3><hr />

        if(!string.IsNullOrEmpty(Model.InformationToPopup) )
        {
            <h5 class="@(Model.Success?"alert alert-success":"alert alert-danger")">@Model.InformationToPopup</h5>
        }
        <div class="row">
            <div class="col-md-5">
                <div class="form-group row">
                    <label for="@Html.IdFor(m => m.CreationDate)" class="col-sm-5 col-form-label">Date et heure de refus</label>
                    <div class="col-sm-7">
                        <div class="input-group date">
                            @Html.TextBoxFor(m => m.CreationDate, new { @class = "form-control flatpickr flatpickr-input active input-white" })
                            <span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.CreationDate)
                    </div>
                    
                </div>
                <div class="form-group row">
                    <label for="@Html.IdFor(m => m.MachineId)" class="col-sm-5 col-form-label">Machine</label>
                    <div class="col-sm-7">
                        @Html.DropDownListFor(m => m.MachineId, Model.MachineCollection, "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.MachineId)
                    </div>
                </div>

                <div class="form-group row">
                    <label for="@Html.IdFor(m => m.PersonId)" class="col-sm-5 col-form-label">Identifiant</label>
                    <div class="col-sm-7">
                        @Html.TextBoxFor(m => m.PersonId, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.PersonId)
                    </div>
                </div>

                <div class="form-group row">
                    <label for="@Html.IdFor(m => m.GroupId)" class="col-sm-5 col-form-label">Groupe</label>
                    <div class="col-sm-7">
                        @Html.TextBoxFor(m => m.GroupId, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.GroupId)
                    </div>
                </div>

                <div class="form-group row">
                    <label for="@Html.IdFor(m => m.ProductTypeId)" class="col-sm-5 col-form-label">Type Produit</label>
                    <div class="col-sm-7">
                        @Html.DropDownListFor(m => m.ProductTypeId, Model.ProductTypeCollection, "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ProductTypeId)
                    </div>
                </div>

                <div class="form-group row">
                    <label for="@Html.IdFor(m => m.ProductCodeId)" class="col-sm-5 col-form-label">Code Produit</label>
                    <div class="col-sm-7">
                        @Html.DropDownListFor(m => m.ProductCodeId, Model.ProductCodeCollection, "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ProductCodeId)
                    </div>
                </div>

                <div class="form-group row">
                    <label for="@Html.IdFor(m => m.ManufacturedDate)" class="col-sm-5 col-form-label">Date de fabrication</label>
                    <div class="col-sm-7">
                        <div class="input-group date">
                            @Html.TextBoxFor(m => m.ManufacturedDate,new {@class= "form-control input-white" })
                            <span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.ManufacturedDate) 
                    </div>
                </div>

                <div class="form-group row">
                    <label for="@Html.IdFor(m => m.CQId)" class="col-sm-5 col-form-label">Critère CQ</label>
                    <div class="col-sm-7">
                        @Html.DropDownListFor(m => m.CQId, Model.CQCollection, "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CQId)
                    </div>
                </div>


                <fieldset class="form-group">
                    <div class="row">
                        <legend class="col-form-label col-sm-5 pt-0">Type pièce</legend>
                        <div class="col-sm-7">
                            @for (int i = 0; i < Model.PieceTypeCollection.Count; i++)
                            {
                                <div class="form-check">
                                    @Html.RadioButtonFor(m => m.PieceTypeId, Model.PieceTypeCollection[i].Value, new { id = "PieceTypeId" + i.ToString() })

                                    <label class="form-check-label" for="@("PieceTypeId" + i.ToString())">
                                        @Model.PieceTypeCollection[i].Text
                                    </label>
                                </div>
                            }
                            @Html.ValidationMessageFor(m => m.PieceTypeId)
                        </div>
                    </div>
                </fieldset>


            </div>

            <div class="col-md-7">
                @Html.TextBoxFor(m=>m.CreateDateTime, new { @class= "flatpickr flatpickr-input active form-control input-white" })

                <div class="form-group row spacerQuantity">
                    <label for="@Html.IdFor(m => m.Quantity)" class="col-sm-2 col-form-label">Quantité</label>
                    <div class="col-sm-10">
                        <div class="row">
                            <div class="col-sm-4">@Html.TextBoxFor(m => m.Quantity, new { @class = "form-control quantity-tb" })</div>
                            <div class="col-sm-8">@Html.DropDownListFor(m => m.UnitId, Model.UnitCollection, "", new { @class = "form-control quantity-tb" })</div>
                        </div>
                        @Html.ValidationMessageFor(m => m.Quantity)
                    </div>
                </div>

                <div class="form-group row ">
                    <label for="@Html.IdFor(m => m.Order)" class="col-sm-2 col-form-label">Ordre</label>
                    <div class="col-sm-10">
                        @Html.TextBoxFor(m => m.Order, new { @class = "form-control" })
                    </div>

                </div>
            </div>
        </div>


        <div class="form-group row">
            <label for="@Html.IdFor(m => m.Observation)" class="col-sm-2 col-form-label">Observation</label>
            <div class="col-sm-7">
                @Html.TextAreaFor(m => m.Observation, new { @class = "form-control", rows = "6" })
            </div>
        </div>
        @Html.HiddenFor(m=>m.ProductionAreaId)
        <div class="row">
            <div class="col-sm-12 text-center">
                <button type="submit" class="btn btn-primary btn-lg btn-large">Enregistrer</button>
            </div>
        </div>


}

    @section scripts {
        <script type="text/javascript">
        $('#@(Html.IdFor(m => m.CreationDate))').flatpickr({ defaultDate: new Date(), locale: "fr" });
        $('#@(Html.IdFor(m => m.ManufacturedDate))').flatpickr({ defaultDate: new Date(), locale: "fr" });
        $('#@(Html.IdFor(m => m.CreateDateTime))').flatpickr({
            noCalendar: true,
            enableTime: true,
            dateFormat: 'H:i',
            time_24hr: true,
            defaultDate: new Date(),
            locale: "fr"
        });

        </script>
    }


